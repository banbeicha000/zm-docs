import{_ as t,o as e,c as r,X as s}from"./chunks/framework.a911dc49.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other/network.md","filePath":"other/network.md","lastUpdated":1704351953000}'),a={name:"other/network.md"},o=s('<h2 id="http请求头referrer" tabindex="-1">HTTP请求头referrer <a class="header-anchor" href="#http请求头referrer" aria-label="Permalink to &quot;HTTP请求头referrer&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Referer 请求头包含了当前请求页面的来源页面的地址，即表示当前页面是通过此来源页面里的链接进入的。服务端一般使用 Referer 请求头识别访问来源(需要注意的是 referer 实际上是 &quot;referrer&quot; 误拼写)</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>在浏览器中，我们不能自定义请求的Referer属性，它是由浏览器给请求带上的，即不能被仿造</li><li>当在地址栏直接输入网址并回车时，会发送一个Get请求，并且其Referer属性为空</li></ul></div><p>实际项目中，会出现调用接口返回 403 Forbidden 并提示 You don&#39;t have permission to access the URL on this server.denied by Referer ACL，在响应头中出现 <strong>X-Tengine-Error:denied by Referer ACL</strong> 例如，调用阿里云地图数据 <a href="https://geo.datav.aliyun.com/areas_v3/bound/341600_full.json" target="_blank" rel="noreferrer">https://geo.datav.aliyun.com/areas_v3/bound/341600_full.json</a> <br></p><h2 id="破解防盗链" tabindex="-1">破解防盗链 <a class="header-anchor" href="#破解防盗链" aria-label="Permalink to &quot;破解防盗链&quot;">​</a></h2><ol><li>如果是客户端（比如exe，app）而不是网页，不使用浏览器，自己发送请求则可以随意伪造</li><li>对于网页，这就需要让一个服务器来代理，网页把请求发到代理服务器，由代理服务器去伪造请求，拿到资源后再返回给网页 <br></li></ol><p>但不是自己的服务则无法进行代理，这种情况可以使用以下方法：<br></p><ol><li>在 HTML 中添加 <meta name="referrer" content="no-referrer"></li></ol><details><summary>content 的值有以下几种</summary><table><tr><td>no-referrer</td><td>不发送 HTTP Referer 请求头</td></tr><tr><td>no-origin</td><td>仅在 Referer 标头中发送来源</td></tr><tr><td>no-referrer-when-downgrade</td><td>果请求目标与当前页面一样安全或者更加安全（HTTP(S)→HTTPS），则发送完整 URL；如果请求目标更加不安全（HTTPS→HTTP），则不发送 referrer。</td></tr><tr><td>origin-when-cross-origin</td><td>对于同源的请求，会发送完整的 URL 作为引用地址，但是对于非同源请求仅发送文件的源</td></tr><tr><td>same-origin</td><td>对于同源的请求会发送引用地址，但是对于非同源请求则不发送引用地址信息</td></tr><tr><td>strict-origin</td><td>在同等安全级别的情况下，发送文件的源作为引用地址 (HTTPS-&gt;HTTPS)，但是在降级的情况下不会发送 (HTTPS-&gt;HTTP)</td></tr><tr><td>strict-origin-when-cross-origin（默认值）</td><td>对于同源的请求，发送来源、路径以及查询字符串。对于在相同安全级别的情况下（HTTPS→HTTPS）的跨源请求，仅发送来源。在目标的安全级别下降的情况下（HTTPS→HTTP）则不发送 Referer 标头</td></tr><tr><td>unsafe-url</td><td>无论是同源请求还是非同源请求，都发送完整的 URL（移除参数信息之后）作为引用地址</td></tr></table></details><ol start="2"><li>或者用 &lt;a&gt;、&lt;area&gt;、&lt;img&gt;、&lt;iframe&gt;、&lt;script&gt; 或者 &lt;link&gt; 元素上的 referrerpolicy 属性为其设置独立的请求策略</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://example.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">referrerpolicy</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">origin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">…</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ol start="3"><li>另外也可以在 &lt;a&gt;、&lt;area&gt; 或者 &lt;link&gt; 元素上将 rel 属性设置为 noreferrer</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://example.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">noreferrer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">…</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果服务端防盗链设置了不允许 referer 字段为空。那么只能让服务端防盗链将网站链接配置到防盗链白名单中，来避免 403 Forbidden, AccessDenied 的问题</p></div>',14),l=[o];function n(p,c,i,d,D,F){return e(),r("div",null,l)}const h=t(a,[["render",n]]);export{f as __pageData,h as default};
