import{_ as a,o as e,c as t,X as l}from"./chunks/framework.a911dc49.js";const u=JSON.parse('{"title":"瓦片地图服务","description":"","frontmatter":{},"headers":[],"relativePath":"other/tile.md","filePath":"other/tile.md","lastUpdated":1723173456000}'),i={name:"other/tile.md"},o=l('<h1 id="瓦片地图服务" tabindex="-1">瓦片地图服务 <a class="header-anchor" href="#瓦片地图服务" aria-label="Permalink to &quot;瓦片地图服务&quot;">​</a></h1><h2 id="wms" tabindex="-1">WMS <a class="header-anchor" href="#wms" aria-label="Permalink to &quot;WMS&quot;">​</a></h2><p>在瓦片地图技术之前，一般是把将要显示的地理范围发送到服务端，服务器端将地理范围内的地理数据都查询出来，然后在服务端按照预先定义的专题地图的配置样式渲染成地图图片，再返回给客户端浏览，也就是 OGC（地理信息联盟）标准的 WMS（Web Map Service）服务</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>WMS由于地理范围的不可控，获取范围内的数据不可控，数据有时候会很大，数据通常在数据库中，IO和网络传输就耗时很严重；服务端获取数据后会进行数据渲染成地图图片，占用大量CPU资源。info</p></div><h2 id="切片-栅格和矢量切片" tabindex="-1">切片(栅格和矢量切片) <a class="header-anchor" href="#切片-栅格和矢量切片" aria-label="Permalink to &quot;切片(栅格和矢量切片)&quot;">​</a></h2><p>预先在服务端全量渲染，然后按照地图不同的显示级别（金字塔原理），切成了xyz的图片。户每次访问时候，根据当前的地理范围映射到瓦片坐标的图片索引（XYZ），然后从后端请求这些图片索引，客户端拿到图片后按照顺序依次渲染图片。openStreetMap、高德地图等基于该技术原理建设了自己的切片地图服务。</p><details class="details custom-block"><summary>Details</summary><p>虽然基于XYZ的图片切片技术很成功，但是也存在问题:</p><ol><li>全图预切耗时长：通常切图zoom级别从0到20，根据金字塔原理，上一级别的一张图片，下一级别会裂变成4张，级别越大，图片越多；同时地理范围越大，图片也越多，图片多了，切图耗时就很漫长。</li><li>资源要求高：需要庞大的服务端渲染和切图的计算资源，满足分布式渲染、切图、存储需求。</li><li>存储冗余：原始矢量和栅格数据，同时冗余存储了数据切片，存储压力大，数据切片转储IO压力大。ArcGIS为了提升转储性能，开创了离散性切片和紧凑型切片两个格式，紧凑型切片在转储时性能较高。</li><li>地图风格千篇一律，无法高度定制化(栅格切片)</li></ol></details><h3 id="切片开源软件" tabindex="-1">切片开源软件 <a class="header-anchor" href="#切片开源软件" aria-label="Permalink to &quot;切片开源软件&quot;">​</a></h3><ol><li>Maperitive 该软件开源，但比较老，早已不再维护。可以直接导入 .osm 文件生成 tiles。但是生成的zoom级别只有5层，而且文件数据量不大的情况下切图仍比较耗时</li><li>QGIS 该软件开源，可定制化样式，功能多，配置插件QTiles可切栅格图</li></ol><h3 id="地图数据来源" tabindex="-1">地图数据来源 <a class="header-anchor" href="#地图数据来源" aria-label="Permalink to &quot;地图数据来源&quot;">​</a></h3><p><a href="https://www.openstreetmap.org/" target="_blank" rel="noreferrer">openStreetMap</a> 开源免费</p><ol><li>腾讯瓦片服务 <code>https://rt1.map.gtimg.com/tile?z={z}&amp;x={x}&amp;y={-y}&amp;styleid=0&amp;version=256</code></li><li>高德瓦片服务 <code>https://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={x}&amp;y={y}&amp;z={z}</code></li></ol><details class="details custom-block"><summary>Details</summary><li>其中 `s 可取 1-4`，如 `https://webrd03.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={x}&amp;y={y}&amp;z={z}` </li><li>使用 leafLet 地图插件可以这样使用 <br> L.tileLayer(&#39;https://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={x}&amp;y={y}&amp;z={z}&#39;, { attribution: &#39;Map data © 高德地图&#39;, subdomains: [&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;] }).addTo(map) </li></details><ol start="3"><li>OSM镜像服务 <code>http://{a-c}.tile.osm.org/{z}/{x}/{y}.png</code> 其中 <code>a-c</code> 取 <code>a、b、c</code></li><li>ArcGIS World卫星图 <code>https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}</code></li></ol><h2 id="动态矢量切片" tabindex="-1">动态矢量切片 <a class="header-anchor" href="#动态矢量切片" aria-label="Permalink to &quot;动态矢量切片&quot;">​</a></h2><p>动态矢量切片不再预先切图，也不会有大量切片的文件存储，解决切片技术所遗留的问题。动态矢量切片技术基本上数据不出库，而由数据库汇总组织数据并直接生成切片结果出去，后台几乎不用做啥。可以使用 PostGIS （开源）</p>',16),s=[o];function r(p,c,m,d,n,h){return e(),t("div",null,s)}const b=a(i,[["render",r]]);export{u as __pageData,b as default};
